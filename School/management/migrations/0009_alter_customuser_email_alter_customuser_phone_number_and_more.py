# Generated by Django 5.1.2 on 2024-10-23 03:05

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('management', '0008_alter_subject_subject_code'),
    ]

    operations = [
        migrations.AlterField(
            model_name='customuser',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='phone_number',
            field=models.CharField(blank=True, max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='subject',
            name='subject_code',
            field=models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid 3-digit subject_code.', regex='^\\d{3}$')], verbose_name='Subject Code'),
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid first name.', regex='^[a-zA-Z]+(?: [a-zA-Z]+)*$')], verbose_name='First Name')),
                ('last_name', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid last name.', regex='^[a-zA-Z]+(?: [a-zA-Z]+)*$')], verbose_name='Last Name')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid mobile number.', regex='^[6-9]\\d{9}$')])),
                ('email', models.EmailField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid email address.', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')])),
                ('aadhar_number', models.CharField(default='', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid 12-digit aadhar card number.', regex='^\\d{12}$')], verbose_name='Aadhar Card')),
                ('mother_name', models.CharField(db_default='', max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid mother name.', regex='^[a-zA-Z]+(?: [a-zA-Z]+)*$')], verbose_name='Mother Name')),
                ('father_name', models.CharField(db_default='', max_length=64, validators=[django.core.validators.RegexValidator(message='Please enter a valid father name.', regex='^[a-zA-Z]+(?: [a-zA-Z]+)*$')], verbose_name='Father Name')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='M', max_length=6, verbose_name='Gender')),
                ('category', models.CharField(choices=[('General', 'General'), ('OBC', 'OBC'), ('SC', 'SC'), ('ST', 'ST')], default='General', max_length=15, verbose_name='Category')),
                ('religion', models.CharField(choices=[('Hinduism', 'Hinduism'), ('Islam', 'Islam'), ('Christianity', 'Christianity'), ('Sikhism', 'Sikhism'), ('Buddhism', 'Buddhism'), ('Jainism', 'Jainism'), ('Zoroastrianism', 'Zoroastrianism'), ('Judaism', 'Judaism'), ('Others', 'Others')], default='Hinduism', max_length=15, verbose_name='Religion')),
                ('per_house_no', models.CharField(blank=True, max_length=20, verbose_name='House No')),
                ('per_landmark', models.CharField(blank=True, max_length=100, verbose_name='Landmark')),
                ('per_city_or_village', models.CharField(max_length=64, verbose_name='City/Village')),
                ('per_pincode', models.CharField(default='', max_length=6, validators=[django.core.validators.RegexValidator(message='Please enter a valid 6-digit pincode.', regex='^\\d{6}$')], verbose_name='Pincode')),
                ('per_district', models.CharField(choices=[('', 'Select District'), ('Agra', 'Agra'), ('Aligarh', 'Aligarh'), ('Ambedkar Nagar', 'Ambedkar Nagar'), ('Amethi (Chatrapati Sahuji Mahraj Nagar)', 'Amethi (Chatrapati Sahuji Mahraj Nagar)'), ('Amroha (J.P. Nagar)', 'Amroha (J.P. Nagar)'), ('Auraiya', 'Auraiya'), ('Ayodhya (Faizabad)', 'Ayodhya (Faizabad)'), ('Azamgarh', 'Azamgarh'), ('Badaun', 'Badaun'), ('Baghpat', 'Baghpat'), ('Bahraich', 'Bahraich'), ('Ballia', 'Ballia'), ('Balrampur', 'Balrampur'), ('Banda', 'Banda'), ('Barabanki', 'Barabanki'), ('Bareilly', 'Bareilly'), ('Basti', 'Basti'), ('Bhadohi (Sant Ravidas Nagar)', 'Bhadohi (Sant Ravidas Nagar)'), ('Bijnor', 'Bijnor'), ('Budaun', 'Budaun'), ('Bulandshahr', 'Bulandshahr'), ('Chandauli', 'Chandauli'), ('Chitrakoot', 'Chitrakoot'), ('Deoria', 'Deoria'), ('Etah', 'Etah'), ('Etawah', 'Etawah'), ('Farrukhabad', 'Farrukhabad'), ('Fatehpur', 'Fatehpur'), ('Firozabad', 'Firozabad'), ('Gautam Buddh Nagar (Noida)', 'Gautam Buddh Nagar (Noida)'), ('Ghaziabad', 'Ghaziabad'), ('Ghazipur', 'Ghazipur'), ('Gonda', 'Gonda'), ('Gorakhpur', 'Gorakhpur'), ('Hamirpur', 'Hamirpur'), ('Hapur (Panchsheel Nagar)', 'Hapur (Panchsheel Nagar)'), ('Hardoi', 'Hardoi'), ('Hathras (Mahamaya Nagar)', 'Hathras (Mahamaya Nagar)'), ('Jalaun (Orai)', 'Jalaun (Orai)'), ('Jaunpur', 'Jaunpur'), ('Jhansi', 'Jhansi'), ('Kannauj', 'Kannauj'), ('Kanpur Dehat (Rama Bai Nagar)', 'Kanpur Dehat (Rama Bai Nagar)'), ('Kanpur Nagar', 'Kanpur Nagar'), ('Kasganj', 'Kasganj'), ('Kaushambi', 'Kaushambi'), ('Kheri (Lakhimpur Kheri)', 'Kheri (Lakhimpur Kheri)'), ('Kushinagar (Padrauna)', 'Kushinagar (Padrauna)'), ('Lalitpur', 'Lalitpur'), ('Lucknow', 'Lucknow'), ('Maharajganj', 'Maharajganj'), ('Mahoba', 'Mahoba'), ('Mainpuri', 'Mainpuri'), ('Mathura', 'Mathura'), ('Mau', 'Mau'), ('Meerut', 'Meerut'), ('Mirzapur', 'Mirzapur'), ('Moradabad', 'Moradabad'), ('Muzaffarnagar', 'Muzaffarnagar'), ('Pilibhit', 'Pilibhit'), ('Pratapgarh', 'Pratapgarh'), ('Prayagraj (Allahabad)', 'Prayagraj (Allahabad)'), ('Raebareli', 'Raebareli'), ('Rampur', 'Rampur'), ('Saharanpur', 'Saharanpur'), ('Sambhal (Bhim Nagar)', 'Sambhal (Bhim Nagar)'), ('Sant Kabir Nagar', 'Sant Kabir Nagar'), ('Shahjahanpur', 'Shahjahanpur'), ('Shamli (Prabuddh Nagar)', 'Shamli (Prabuddh Nagar)'), ('Shrawasti', 'Shrawasti'), ('Siddharthnagar', 'Siddharthnagar'), ('Sitapur', 'Sitapur'), ('Sonbhadra', 'Sonbhadra'), ('Sultanpur', 'Sultanpur'), ('Unnao', 'Unnao'), ('Varanasi', 'Varanasi')], default='', max_length=50, verbose_name='District')),
                ('per_state', models.CharField(default='Uttar Pradesh', editable=False, max_length=50, verbose_name='State')),
                ('cor_house_no', models.CharField(blank=True, max_length=20, verbose_name='House No')),
                ('cor_landmark', models.CharField(blank=True, max_length=100, verbose_name='Landmark')),
                ('cor_city_or_village', models.CharField(default='', max_length=64, verbose_name='City/Village')),
                ('cor_pincode', models.CharField(default='', max_length=6, validators=[django.core.validators.RegexValidator(message='Please enter a valid 6-digit pincode.', regex='^\\d{6}$')], verbose_name='Pincode')),
                ('cor_district', models.CharField(choices=[('', 'Select District'), ('Agra', 'Agra'), ('Aligarh', 'Aligarh'), ('Ambedkar Nagar', 'Ambedkar Nagar'), ('Amethi (Chatrapati Sahuji Mahraj Nagar)', 'Amethi (Chatrapati Sahuji Mahraj Nagar)'), ('Amroha (J.P. Nagar)', 'Amroha (J.P. Nagar)'), ('Auraiya', 'Auraiya'), ('Ayodhya (Faizabad)', 'Ayodhya (Faizabad)'), ('Azamgarh', 'Azamgarh'), ('Badaun', 'Badaun'), ('Baghpat', 'Baghpat'), ('Bahraich', 'Bahraich'), ('Ballia', 'Ballia'), ('Balrampur', 'Balrampur'), ('Banda', 'Banda'), ('Barabanki', 'Barabanki'), ('Bareilly', 'Bareilly'), ('Basti', 'Basti'), ('Bhadohi (Sant Ravidas Nagar)', 'Bhadohi (Sant Ravidas Nagar)'), ('Bijnor', 'Bijnor'), ('Budaun', 'Budaun'), ('Bulandshahr', 'Bulandshahr'), ('Chandauli', 'Chandauli'), ('Chitrakoot', 'Chitrakoot'), ('Deoria', 'Deoria'), ('Etah', 'Etah'), ('Etawah', 'Etawah'), ('Farrukhabad', 'Farrukhabad'), ('Fatehpur', 'Fatehpur'), ('Firozabad', 'Firozabad'), ('Gautam Buddh Nagar (Noida)', 'Gautam Buddh Nagar (Noida)'), ('Ghaziabad', 'Ghaziabad'), ('Ghazipur', 'Ghazipur'), ('Gonda', 'Gonda'), ('Gorakhpur', 'Gorakhpur'), ('Hamirpur', 'Hamirpur'), ('Hapur (Panchsheel Nagar)', 'Hapur (Panchsheel Nagar)'), ('Hardoi', 'Hardoi'), ('Hathras (Mahamaya Nagar)', 'Hathras (Mahamaya Nagar)'), ('Jalaun (Orai)', 'Jalaun (Orai)'), ('Jaunpur', 'Jaunpur'), ('Jhansi', 'Jhansi'), ('Kannauj', 'Kannauj'), ('Kanpur Dehat (Rama Bai Nagar)', 'Kanpur Dehat (Rama Bai Nagar)'), ('Kanpur Nagar', 'Kanpur Nagar'), ('Kasganj', 'Kasganj'), ('Kaushambi', 'Kaushambi'), ('Kheri (Lakhimpur Kheri)', 'Kheri (Lakhimpur Kheri)'), ('Kushinagar (Padrauna)', 'Kushinagar (Padrauna)'), ('Lalitpur', 'Lalitpur'), ('Lucknow', 'Lucknow'), ('Maharajganj', 'Maharajganj'), ('Mahoba', 'Mahoba'), ('Mainpuri', 'Mainpuri'), ('Mathura', 'Mathura'), ('Mau', 'Mau'), ('Meerut', 'Meerut'), ('Mirzapur', 'Mirzapur'), ('Moradabad', 'Moradabad'), ('Muzaffarnagar', 'Muzaffarnagar'), ('Pilibhit', 'Pilibhit'), ('Pratapgarh', 'Pratapgarh'), ('Prayagraj (Allahabad)', 'Prayagraj (Allahabad)'), ('Raebareli', 'Raebareli'), ('Rampur', 'Rampur'), ('Saharanpur', 'Saharanpur'), ('Sambhal (Bhim Nagar)', 'Sambhal (Bhim Nagar)'), ('Sant Kabir Nagar', 'Sant Kabir Nagar'), ('Shahjahanpur', 'Shahjahanpur'), ('Shamli (Prabuddh Nagar)', 'Shamli (Prabuddh Nagar)'), ('Shrawasti', 'Shrawasti'), ('Siddharthnagar', 'Siddharthnagar'), ('Sitapur', 'Sitapur'), ('Sonbhadra', 'Sonbhadra'), ('Sultanpur', 'Sultanpur'), ('Unnao', 'Unnao'), ('Varanasi', 'Varanasi')], default='', max_length=50, verbose_name='District')),
                ('cor_state', models.CharField(default='Uttar Pradesh', editable=False, max_length=50, verbose_name='State')),
                ('nationality', models.CharField(default='INDIAN', max_length=50, verbose_name='Nationality')),
                ('student_id', models.CharField(editable=False, max_length=50, unique=True, verbose_name='Student ID')),
                ('DOB', models.DateField(default='', max_length=10, verbose_name='Date of Birth')),
                ('enrollment_date', models.DateField(default=datetime.date.today, max_length=10, verbose_name='Admission Date')),
                ('alternative_phone', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid mobile number.', regex='^[6-9]\\d{9}$')])),
                ('profile_photo', models.ImageField(default='profile/student/photo/user.png', upload_to='profile/student/photo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Student Photo')),
                ('Student_sign', models.ImageField(blank=True, default='', upload_to='profile/student/signature/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Student Signature')),
                ('mother_sign', models.ImageField(blank=True, default='', upload_to='profile/student/parent_signature/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Mother Signature')),
                ('father_sign', models.ImageField(blank=True, default='', upload_to='profile/student/parent_signature/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Father Signature')),
                ('birth_certificate', models.ImageField(blank=True, default='', upload_to='profile/student/certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Birth Certificate')),
                ('character_certificate', models.ImageField(blank=True, default='', upload_to='profile/student/certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Character Certificate')),
                ('aadhar_card', models.ImageField(blank=True, default='', upload_to='profile/student/certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Aadhar Card')),
                ('caste_certificate', models.ImageField(blank=True, default='', upload_to='profile/student/certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Caste Certificate')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('admission_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.studentclass')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
    ]
